/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  ERC721,
  ERC721Interface,
} from "../../../../../@openzeppelin/contracts/token/ERC721/ERC721";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002700380380620027008339818101604052810190620000379190620001f6565b8160009081620000489190620004c6565b5080600190816200005a9190620004c6565b505050620005ad565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b620000cc8262000081565b810181811067ffffffffffffffff82111715620000ee57620000ed62000092565b5b80604052505050565b60006200010362000063565b9050620001118282620000c1565b919050565b600067ffffffffffffffff82111562000134576200013362000092565b5b6200013f8262000081565b9050602081019050919050565b60005b838110156200016c5780820151818401526020810190506200014f565b60008484015250505050565b60006200018f620001898462000116565b620000f7565b905082815260208101848484011115620001ae57620001ad6200007c565b5b620001bb8482856200014c565b509392505050565b600082601f830112620001db57620001da62000077565b5b8151620001ed84826020860162000178565b91505092915050565b6000806040838503121562000210576200020f6200006d565b5b600083015167ffffffffffffffff81111562000231576200023062000072565b5b6200023f85828601620001c3565b925050602083015167ffffffffffffffff81111562000263576200026262000072565b5b6200027185828601620001c3565b9150509250929050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680620002ce57607f821691505b602082108103620002e457620002e362000286565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b6000600883026200034e7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826200030f565b6200035a86836200030f565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620003a7620003a16200039b8462000372565b6200037c565b62000372565b9050919050565b6000819050919050565b620003c38362000386565b620003db620003d282620003ae565b8484546200031c565b825550505050565b600090565b620003f2620003e3565b620003ff818484620003b8565b505050565b5b8181101562000427576200041b600082620003e8565b60018101905062000405565b5050565b601f82111562000476576200044081620002ea565b6200044b84620002ff565b810160208510156200045b578190505b620004736200046a85620002ff565b83018262000404565b50505b505050565b600082821c905092915050565b60006200049b600019846008026200047b565b1980831691505092915050565b6000620004b6838362000488565b9150826002028217905092915050565b620004d1826200027b565b67ffffffffffffffff811115620004ed57620004ec62000092565b5b620004f98254620002b5565b620005068282856200042b565b600060209050601f8311600181146200053e576000841562000529578287015190505b620005358582620004a8565b865550620005a5565b601f1984166200054e86620002ea565b60005b82811015620005785784890151825560018201915060208501945060208101905062000551565b8683101562000598578489015162000594601f89168262000488565b8355505b6001600288020188555050505b505050505050565b61214380620005bd6000396000f3fe608060405234801561001057600080fd5b50600436106100bf5760003560e01c80636352211e1161007c5780636352211e1461019657806370a08231146101c657806395d89b41146101f6578063a22cb46514610214578063b88d4fde14610230578063c87b56dd1461024c578063e985e9c51461027c576100bf565b806301ffc9a7146100c457806306fdde03146100f4578063081812fc14610112578063095ea7b31461014257806323b872dd1461015e57806342842e0e1461017a575b600080fd5b6100de60048036038101906100d991906113a7565b6102ac565b6040516100eb91906113ef565b60405180910390f35b6100fc61038e565b604051610109919061149a565b60405180910390f35b61012c600480360381019061012791906114f2565b610420565b6040516101399190611560565b60405180910390f35b61015c600480360381019061015791906115a7565b610466565b005b610178600480360381019061017391906115e7565b61057d565b005b610194600480360381019061018f91906115e7565b6105dd565b005b6101b060048036038101906101ab91906114f2565b6105fd565b6040516101bd9190611560565b60405180910390f35b6101e060048036038101906101db919061163a565b6106ae565b6040516101ed9190611676565b60405180910390f35b6101fe610765565b60405161020b919061149a565b60405180910390f35b61022e600480360381019061022991906116bd565b6107f7565b005b61024a60048036038101906102459190611832565b61080d565b005b610266600480360381019061026191906114f2565b61086f565b604051610273919061149a565b60405180910390f35b610296600480360381019061029191906118b5565b6108d7565b6040516102a391906113ef565b60405180910390f35b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061037757507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b8061038757506103868261096b565b5b9050919050565b60606000805461039d90611924565b80601f01602080910402602001604051908101604052809291908181526020018280546103c990611924565b80156104165780601f106103eb57610100808354040283529160200191610416565b820191906000526020600020905b8154815290600101906020018083116103f957829003601f168201915b5050505050905090565b600061042b826109d5565b6004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000610471826105fd565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036104e1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d8906119c7565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610500610a20565b73ffffffffffffffffffffffffffffffffffffffff16148061052f575061052e81610529610a20565b6108d7565b5b61056e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056590611a59565b60405180910390fd5b6105788383610a28565b505050565b61058e610588610a20565b82610ae1565b6105cd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c490611aeb565b60405180910390fd5b6105d8838383610b76565b505050565b6105f88383836040518060200160405280600081525061080d565b505050565b6000806002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036106a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069c90611b57565b60405180910390fd5b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361071e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071590611be9565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b60606001805461077490611924565b80601f01602080910402602001604051908101604052809291908181526020018280546107a090611924565b80156107ed5780601f106107c2576101008083540402835291602001916107ed565b820191906000526020600020905b8154815290600101906020018083116107d057829003601f168201915b5050505050905090565b610809610802610a20565b8383610ddc565b5050565b61081e610818610a20565b83610ae1565b61085d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085490611aeb565b60405180910390fd5b61086984848484610f48565b50505050565b606061087a826109d5565b6000610884610fa4565b905060008151116108a457604051806020016040528060008152506108cf565b806108ae84610fbb565b6040516020016108bf929190611c45565b6040516020818303038152906040525b915050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6109de8161111b565b610a1d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a1490611b57565b60405180910390fd5b50565b600033905090565b816004600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff16610a9b836105fd565b73ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610aed836105fd565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610b2f5750610b2e81856108d7565b5b80610b6d57508373ffffffffffffffffffffffffffffffffffffffff16610b5584610420565b73ffffffffffffffffffffffffffffffffffffffff16145b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16610b96826105fd565b73ffffffffffffffffffffffffffffffffffffffff1614610bec576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610be390611cdb565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610c5b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5290611d6d565b60405180910390fd5b610c66838383611187565b610c71600082610a28565b6001600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610cc19190611dbc565b925050819055506001600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000828254610d189190611df0565b92505081905550816002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4610dd783838361118c565b505050565b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610e4a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4190611e70565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610f3b91906113ef565b60405180910390a3505050565b610f53848484610b76565b610f5f84848484611191565b610f9e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f9590611f02565b60405180910390fd5b50505050565b606060405180602001604052806000815250905090565b606060008203611002576040518060400160405280600181526020017f30000000000000000000000000000000000000000000000000000000000000008152509050611116565b600082905060005b6000821461103457808061101d90611f22565b915050600a8261102d9190611f99565b915061100a565b60008167ffffffffffffffff8111156110505761104f611707565b5b6040519080825280601f01601f1916602001820160405280156110825781602001600182028036833780820191505090505b5090505b6000851461110f5760018261109b9190611dbc565b9150600a856110aa9190611fca565b60306110b69190611df0565b60f81b8183815181106110cc576110cb611ffb565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600a856111089190611f99565b9450611086565b8093505050505b919050565b60008073ffffffffffffffffffffffffffffffffffffffff166002600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614159050919050565b505050565b505050565b60006111b28473ffffffffffffffffffffffffffffffffffffffff16611318565b1561130b578373ffffffffffffffffffffffffffffffffffffffff1663150b7a026111db610a20565b8786866040518563ffffffff1660e01b81526004016111fd949392919061207f565b6020604051808303816000875af192505050801561123957506040513d601f19601f8201168201806040525081019061123691906120e0565b60015b6112bb573d8060008114611269576040519150601f19603f3d011682016040523d82523d6000602084013e61126e565b606091505b5060008151036112b3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112aa90611f02565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050611310565b600190505b949350505050565b6000808273ffffffffffffffffffffffffffffffffffffffff163b119050919050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b6113848161134f565b811461138f57600080fd5b50565b6000813590506113a18161137b565b92915050565b6000602082840312156113bd576113bc611345565b5b60006113cb84828501611392565b91505092915050565b60008115159050919050565b6113e9816113d4565b82525050565b600060208201905061140460008301846113e0565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611444578082015181840152602081019050611429565b60008484015250505050565b6000601f19601f8301169050919050565b600061146c8261140a565b6114768185611415565b9350611486818560208601611426565b61148f81611450565b840191505092915050565b600060208201905081810360008301526114b48184611461565b905092915050565b6000819050919050565b6114cf816114bc565b81146114da57600080fd5b50565b6000813590506114ec816114c6565b92915050565b60006020828403121561150857611507611345565b5b6000611516848285016114dd565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061154a8261151f565b9050919050565b61155a8161153f565b82525050565b60006020820190506115756000830184611551565b92915050565b6115848161153f565b811461158f57600080fd5b50565b6000813590506115a18161157b565b92915050565b600080604083850312156115be576115bd611345565b5b60006115cc85828601611592565b92505060206115dd858286016114dd565b9150509250929050565b600080600060608486031215611600576115ff611345565b5b600061160e86828701611592565b935050602061161f86828701611592565b9250506040611630868287016114dd565b9150509250925092565b6000602082840312156116505761164f611345565b5b600061165e84828501611592565b91505092915050565b611670816114bc565b82525050565b600060208201905061168b6000830184611667565b92915050565b61169a816113d4565b81146116a557600080fd5b50565b6000813590506116b781611691565b92915050565b600080604083850312156116d4576116d3611345565b5b60006116e285828601611592565b92505060206116f3858286016116a8565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61173f82611450565b810181811067ffffffffffffffff8211171561175e5761175d611707565b5b80604052505050565b600061177161133b565b905061177d8282611736565b919050565b600067ffffffffffffffff82111561179d5761179c611707565b5b6117a682611450565b9050602081019050919050565b82818337600083830152505050565b60006117d56117d084611782565b611767565b9050828152602081018484840111156117f1576117f0611702565b5b6117fc8482856117b3565b509392505050565b600082601f830112611819576118186116fd565b5b81356118298482602086016117c2565b91505092915050565b6000806000806080858703121561184c5761184b611345565b5b600061185a87828801611592565b945050602061186b87828801611592565b935050604061187c878288016114dd565b925050606085013567ffffffffffffffff81111561189d5761189c61134a565b5b6118a987828801611804565b91505092959194509250565b600080604083850312156118cc576118cb611345565b5b60006118da85828601611592565b92505060206118eb85828601611592565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061193c57607f821691505b60208210810361194f5761194e6118f5565b5b50919050565b7f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008201527f7200000000000000000000000000000000000000000000000000000000000000602082015250565b60006119b1602183611415565b91506119bc82611955565b604082019050919050565b600060208201905081810360008301526119e0816119a4565b9050919050565b7f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60008201527f6b656e206f776e6572206e6f7220617070726f76656420666f7220616c6c0000602082015250565b6000611a43603e83611415565b9150611a4e826119e7565b604082019050919050565b60006020820190508181036000830152611a7281611a36565b9050919050565b7f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560008201527f72206e6f7220617070726f766564000000000000000000000000000000000000602082015250565b6000611ad5602e83611415565b9150611ae082611a79565b604082019050919050565b60006020820190508181036000830152611b0481611ac8565b9050919050565b7f4552433732313a20696e76616c696420746f6b656e2049440000000000000000600082015250565b6000611b41601883611415565b9150611b4c82611b0b565b602082019050919050565b60006020820190508181036000830152611b7081611b34565b9050919050565b7f4552433732313a2061646472657373207a65726f206973206e6f74206120766160008201527f6c6964206f776e65720000000000000000000000000000000000000000000000602082015250565b6000611bd3602983611415565b9150611bde82611b77565b604082019050919050565b60006020820190508181036000830152611c0281611bc6565b9050919050565b600081905092915050565b6000611c1f8261140a565b611c298185611c09565b9350611c39818560208601611426565b80840191505092915050565b6000611c518285611c14565b9150611c5d8284611c14565b91508190509392505050565b7f4552433732313a207472616e736665722066726f6d20696e636f72726563742060008201527f6f776e6572000000000000000000000000000000000000000000000000000000602082015250565b6000611cc5602583611415565b9150611cd082611c69565b604082019050919050565b60006020820190508181036000830152611cf481611cb8565b9050919050565b7f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611d57602483611415565b9150611d6282611cfb565b604082019050919050565b60006020820190508181036000830152611d8681611d4a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611dc7826114bc565b9150611dd2836114bc565b9250828203905081811115611dea57611de9611d8d565b5b92915050565b6000611dfb826114bc565b9150611e06836114bc565b9250828201905080821115611e1e57611e1d611d8d565b5b92915050565b7f4552433732313a20617070726f766520746f2063616c6c657200000000000000600082015250565b6000611e5a601983611415565b9150611e6582611e24565b602082019050919050565b60006020820190508181036000830152611e8981611e4d565b9050919050565b7f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560008201527f63656976657220696d706c656d656e7465720000000000000000000000000000602082015250565b6000611eec603283611415565b9150611ef782611e90565b604082019050919050565b60006020820190508181036000830152611f1b81611edf565b9050919050565b6000611f2d826114bc565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203611f5f57611f5e611d8d565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611fa4826114bc565b9150611faf836114bc565b925082611fbf57611fbe611f6a565b5b828204905092915050565b6000611fd5826114bc565b9150611fe0836114bc565b925082611ff057611fef611f6a565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081519050919050565b600082825260208201905092915050565b60006120518261202a565b61205b8185612035565b935061206b818560208601611426565b61207481611450565b840191505092915050565b60006080820190506120946000830187611551565b6120a16020830186611551565b6120ae6040830185611667565b81810360608301526120c08184612046565b905095945050505050565b6000815190506120da8161137b565b92915050565b6000602082840312156120f6576120f5611345565b5b6000612104848285016120cb565b9150509291505056fea2646970667358221220a467321a4fd93d2df4190c7630f94860c381e57a8cea59b7a3af138a6fadfa4c64736f6c63430008110033";

type ERC721ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721__factory extends ContractFactory {
  constructor(...args: ERC721ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name_: string,
    symbol_: string,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  override deploy(
    name_: string,
    symbol_: string,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(name_, symbol_, overrides || {}) as Promise<
      ERC721 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ERC721__factory {
    return super.connect(runner) as ERC721__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721Interface {
    return new Interface(_abi) as ERC721Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): ERC721 {
    return new Contract(address, _abi, runner) as unknown as ERC721;
  }
}
