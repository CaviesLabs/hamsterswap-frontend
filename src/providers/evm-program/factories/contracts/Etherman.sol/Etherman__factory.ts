/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Etherman,
  EthermanInterface,
} from "../../../contracts/Etherman.sol/Etherman";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_weth",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "WETH",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unwrapWETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "wrapETH",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161075438038061075483398101604081905261002f91610099565b61003833610049565b6001600160a01b03166080526100c9565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100ab57600080fd5b81516001600160a01b03811681146100c257600080fd5b9392505050565b6080516106556100ff6000396000818160f701528181610162015281816101f7015281816102b2015261033e01526106556000f3fe6080604052600436106100595760003560e01c806329793f7d146100655780635869dba81461007a578063715018a61461009a5780638da5cb5b146100af578063ad5c4648146100e5578063f2fde38b1461011957600080fd5b3661006057005b600080fd5b610078610073366004610597565b610139565b005b34801561008657600080fd5b50610078610095366004610597565b610278565b3480156100a657600080fd5b5061007861044b565b3480156100bb57600080fd5b506000546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b3480156100f157600080fd5b506100c97f000000000000000000000000000000000000000000000000000000000000000081565b34801561012557600080fd5b506100786101343660046105c3565b61045f565b6101416104d8565b803414610150576101506105e7565b60003411610160576101606105e7565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db0826040518263ffffffff1660e01b81526004016000604051808303818588803b1580156101bb57600080fd5b505af11580156101cf573d6000803e3d6000fd5b505060405163a9059cbb60e01b81526001600160a01b038681166004830152602482018690527f000000000000000000000000000000000000000000000000000000000000000016935063a9059cbb925060440190506020604051808303816000875af1158015610244573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061026891906105fd565b610274576102746105e7565b5050565b6102806104d8565b60008111610290576102906105e7565b6040516323b872dd60e01b8152336004820152306024820152604481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906323b872dd906064016020604051808303816000875af1158015610303573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061032791906105fd565b50604051632e1a7d4d60e01b8152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d90602401600060405180830381600087803b15801561038a57600080fd5b505af115801561039e573d6000803e3d6000fd5b505050506000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146103ef576040519150601f19603f3d011682016040523d82523d6000602084013e6103f4565b606091505b50509050806104465760405162461bcd60e51b815260206004820152601960248201527808ae4e4dee47440c6c2dcdcdee840eadceee4c2e040ae8aa89603b1b60448201526064015b60405180910390fd5b505050565b6104536104d8565b61045d6000610532565b565b6104676104d8565b6001600160a01b0381166104cc5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161043d565b6104d581610532565b50565b6000546001600160a01b0316331461045d5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161043d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b03811681146104d557600080fd5b600080604083850312156105aa57600080fd5b82356105b581610582565b946020939093013593505050565b6000602082840312156105d557600080fd5b81356105e081610582565b9392505050565b634e487b7160e01b600052600160045260246000fd5b60006020828403121561060f57600080fd5b815180151581146105e057600080fdfea2646970667358221220bbfafcdb207df0a91486c898f31ec0a35a077b3669b9189ee1e38da97acff59c64736f6c63430008110033";

type EthermanConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: EthermanConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Etherman__factory extends ContractFactory {
  constructor(...args: EthermanConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _weth: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(_weth, overrides || {});
  }
  override deploy(
    _weth: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(_weth, overrides || {}) as Promise<
      Etherman & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Etherman__factory {
    return super.connect(runner) as Etherman__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): EthermanInterface {
    return new Interface(_abi) as EthermanInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Etherman {
    return new Contract(address, _abi, runner) as unknown as Etherman;
  }
}
