/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  Multicall3,
  Multicall3Interface,
} from "../../contracts/Multicall3";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
        ],
        internalType: "struct Multicall3.Call[]",
        name: "calls",
        type: "tuple[]",
      },
    ],
    name: "aggregate",
    outputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
      {
        internalType: "bytes[]",
        name: "returnData",
        type: "bytes[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "bool",
            name: "allowFailure",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
        ],
        internalType: "struct Multicall3.Call3[]",
        name: "calls",
        type: "tuple[]",
      },
    ],
    name: "aggregate3",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "success",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "returnData",
            type: "bytes",
          },
        ],
        internalType: "struct Multicall3.Result[]",
        name: "returnData",
        type: "tuple[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "bool",
            name: "allowFailure",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
        ],
        internalType: "struct Multicall3.Call3Value[]",
        name: "calls",
        type: "tuple[]",
      },
    ],
    name: "aggregate3Value",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "success",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "returnData",
            type: "bytes",
          },
        ],
        internalType: "struct Multicall3.Result[]",
        name: "returnData",
        type: "tuple[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
        ],
        internalType: "struct Multicall3.Call[]",
        name: "calls",
        type: "tuple[]",
      },
    ],
    name: "blockAndAggregate",
    outputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "blockHash",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "success",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "returnData",
            type: "bytes",
          },
        ],
        internalType: "struct Multicall3.Result[]",
        name: "returnData",
        type: "tuple[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBasefee",
    outputs: [
      {
        internalType: "uint256",
        name: "basefee",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getBlockHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "blockHash",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getBlockNumber",
    outputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "chainid",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentBlockCoinbase",
    outputs: [
      {
        internalType: "address",
        name: "coinbase",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentBlockDifficulty",
    outputs: [
      {
        internalType: "uint256",
        name: "difficulty",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentBlockGasLimit",
    outputs: [
      {
        internalType: "uint256",
        name: "gaslimit",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentBlockTimestamp",
    outputs: [
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "getEthBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getLastBlockHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "blockHash",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "requireSuccess",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
        ],
        internalType: "struct Multicall3.Call[]",
        name: "calls",
        type: "tuple[]",
      },
    ],
    name: "tryAggregate",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "success",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "returnData",
            type: "bytes",
          },
        ],
        internalType: "struct Multicall3.Result[]",
        name: "returnData",
        type: "tuple[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bool",
        name: "requireSuccess",
        type: "bool",
      },
      {
        components: [
          {
            internalType: "address",
            name: "target",
            type: "address",
          },
          {
            internalType: "bytes",
            name: "callData",
            type: "bytes",
          },
        ],
        internalType: "struct Multicall3.Call[]",
        name: "calls",
        type: "tuple[]",
      },
    ],
    name: "tryBlockAndAggregate",
    outputs: [
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "blockHash",
        type: "bytes32",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "success",
            type: "bool",
          },
          {
            internalType: "bytes",
            name: "returnData",
            type: "bytes",
          },
        ],
        internalType: "struct Multicall3.Result[]",
        name: "returnData",
        type: "tuple[]",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610c84806100206000396000f3fe6080604052600436106100d35760003560e01c80634d2301cc1161007a5780634d2301cc146101ae57806372425d9d146101d657806382ad56cb146101e957806386d516e8146101fc578063a8b0574e1461020f578063bce38bd71461022a578063c3077fa91461023d578063ee82ac5e1461025057600080fd5b80630f28c97d146100d8578063174dea71146100fa578063252dba421461011a57806327e86d6e1461013b5780633408e47014610153578063399542e9146101665780633e64a6961461018857806342cbb15c1461019b575b600080fd5b3480156100e457600080fd5b50425b6040519081526020015b60405180910390f35b61010d610108366004610913565b61026f565b6040516100f19190610a08565b61012d610128366004610913565b61045c565b6040516100f1929190610a22565b34801561014757600080fd5b504360001901406100e7565b34801561015f57600080fd5b50466100e7565b610179610174366004610a8c565b6105a5565b6040516100f193929190610ae5565b34801561019457600080fd5b50486100e7565b3480156101a757600080fd5b50436100e7565b3480156101ba57600080fd5b506100e76101c9366004610b0d565b6001600160a01b03163190565b3480156101e257600080fd5b50446100e7565b61010d6101f7366004610913565b6105c0565b34801561020857600080fd5b50456100e7565b34801561021b57600080fd5b506040514181526020016100f1565b61010d610238366004610a8c565b610741565b61017961024b366004610913565b6108a9565b34801561025c57600080fd5b506100e761026b366004610b36565b4090565b6060600082806001600160401b0381111561028c5761028c610b4f565b6040519080825280602002602001820160405280156102d257816020015b6040805180820190915260008152606060208201528152602001906001900390816102aa5790505b5092503660005b828110156103fe5760008582815181106102f5576102f5610b65565b6020026020010151905087878381811061031157610311610b65565b90506020028101906103239190610b7b565b60408101359586019590935061033c6020850185610b0d565b6001600160a01b0316816103536060870187610b9b565b604051610361929190610be1565b60006040518083038185875af1925050503d806000811461039e576040519150601f19603f3d011682016040523d82523d6000602084013e6103a3565b606091505b5060208085019190915290151580845290850135176103f45762461bcd60e51b6000526020600452601760245276135d5b1d1a58d85b1b0cce8818d85b1b0819985a5b1959604a1b60445260846000fd5b50506001016102d9565b508234146104535760405162461bcd60e51b815260206004820152601a60248201527f4d756c746963616c6c333a2076616c7565206d69736d6174636800000000000060448201526064015b60405180910390fd5b50505092915050565b43606082806001600160401b0381111561047857610478610b4f565b6040519080825280602002602001820160405280156104ab57816020015b60608152602001906001900390816104965790505b5091503660005b8281101561059b5760008787838181106104ce576104ce610b65565b90506020028101906104e09190610bf1565b92506104ef6020840184610b0d565b6001600160a01b03166105056020850185610b9b565b604051610513929190610be1565b6000604051808303816000865af19150503d8060008114610550576040519150601f19603f3d011682016040523d82523d6000602084013e610555565b606091505b5086848151811061056857610568610b65565b60209081029190910101529050806105925760405162461bcd60e51b815260040161044a90610c07565b506001016104b2565b5050509250929050565b43804060606105b5868686610741565b905093509350939050565b606081806001600160401b038111156105db576105db610b4f565b60405190808252806020026020018201604052801561062157816020015b6040805180820190915260008152606060208201528152602001906001900390816105f95790505b5091503660005b8281101561045357600084828151811061064457610644610b65565b6020026020010151905086868381811061066057610660610b65565b90506020028101906106729190610c38565b92506106816020840184610b0d565b6001600160a01b03166106976040850185610b9b565b6040516106a5929190610be1565b6000604051808303816000865af19150503d80600081146106e2576040519150601f19603f3d011682016040523d82523d6000602084013e6106e7565b606091505b5060208084019190915290151580835290840135176107385762461bcd60e51b6000526020600452601760245276135d5b1d1a58d85b1b0cce8818d85b1b0819985a5b1959604a1b60445260646000fd5b50600101610628565b606081806001600160401b0381111561075c5761075c610b4f565b6040519080825280602002602001820160405280156107a257816020015b60408051808201909152600081526060602082015281526020019060019003908161077a5790505b5091503660005b8281101561089f5760008482815181106107c5576107c5610b65565b602002602001015190508686838181106107e1576107e1610b65565b90506020028101906107f39190610bf1565b92506108026020840184610b0d565b6001600160a01b03166108186020850185610b9b565b604051610826929190610be1565b6000604051808303816000865af19150503d8060008114610863576040519150601f19603f3d011682016040523d82523d6000602084013e610868565b606091505b5060208301521515815287156108965780516108965760405162461bcd60e51b815260040161044a90610c07565b506001016107a9565b5050509392505050565b60008060606108ba600186866105a5565b919790965090945092505050565b60008083601f8401126108da57600080fd5b5081356001600160401b038111156108f157600080fd5b6020830191508360208260051b850101111561090c57600080fd5b9250929050565b6000806020838503121561092657600080fd5b82356001600160401b0381111561093c57600080fd5b610948858286016108c8565b90969095509350505050565b6000815180845260005b8181101561097a5760208185018101518683018201520161095e565b506000602082860101526020601f19601f83011685010191505092915050565b600082825180855260208086019550808260051b84010181860160005b848110156109fb57858303601f19018952815180511515845284015160408585018190526109e781860183610954565b9a86019a94505050908301906001016109b7565b5090979650505050505050565b602081526000610a1b602083018461099a565b9392505050565b600060408201848352602060408185015281855180845260608601915060608160051b870101935082870160005b82811015610a7e57605f19888703018452610a6c868351610954565b95509284019290840190600101610a50565b509398975050505050505050565b600080600060408486031215610aa157600080fd5b83358015158114610ab157600080fd5b925060208401356001600160401b03811115610acc57600080fd5b610ad8868287016108c8565b9497909650939450505050565b838152826020820152606060408201526000610b04606083018461099a565b95945050505050565b600060208284031215610b1f57600080fd5b81356001600160a01b0381168114610a1b57600080fd5b600060208284031215610b4857600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b60008235607e19833603018112610b9157600080fd5b9190910192915050565b6000808335601e19843603018112610bb257600080fd5b8301803591506001600160401b03821115610bcc57600080fd5b60200191503681900382131561090c57600080fd5b8183823760009101908152919050565b60008235603e19833603018112610b9157600080fd5b602080825260179082015276135d5b1d1a58d85b1b0cce8818d85b1b0819985a5b1959604a1b604082015260600190565b60008235605e19833603018112610b9157600080fdfea2646970667358221220e9da227d0b855d0ef5765c025b277362a5b7b99e40eb6183639d33f2e7c81fbb64736f6c63430008110033";

type Multicall3ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Multicall3ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Multicall3__factory extends ContractFactory {
  constructor(...args: Multicall3ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Multicall3 & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Multicall3__factory {
    return super.connect(runner) as Multicall3__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Multicall3Interface {
    return new Interface(_abi) as Multicall3Interface;
  }
  static connect(address: string, runner?: ContractRunner | null): Multicall3 {
    return new Contract(address, _abi, runner) as unknown as Multicall3;
  }
}
